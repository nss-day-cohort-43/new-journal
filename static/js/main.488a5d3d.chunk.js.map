{"version":3,"sources":["components/fbAuth/FirebaseProvider.js","components/fbAuth/Login.js","components/fbAuth/Register.js","modules/APICalls.js","components/journal/ChrisList.js","components/journal/ChrisListAddForm.js","components/ApplicationViews.js","components/Header.js","App.js","index.js","components/fbAuth/firebaseConfig.js"],"names":["FirebaseContext","createContext","FirebaseProvider","props","userProfile","sessionStorage","getItem","useState","isLoggedIn","setIsLoggedIn","isFirebaseReady","setIsFirebaseReady","provider","firebase","auth","GoogleAuthProvider","useEffect","onAuthStateChanged","u","Provider","value","login","email","pw","signInWithEmailAndPassword","then","setItem","JSON","stringify","user","logout","signOut","clear","register","password","createUserWithEmailAndPassword","savedUserProfile","console","log","signInWithGoogle","signInWithPopup","children","Spinner","className","Login","history","useHistory","useContext","setEmail","setPassword","Button","onClick","response","push","variant","Form","onSubmit","e","preventDefault","catch","alert","Group","controlId","Label","Control","type","placeholder","onChange","target","to","Register","name","setName","confirmPassword","setConfirmPassword","id","Text","dataURL","ChrisList","journalArray","setJournalArray","fetch","json","data","newArray","Object","keys","map","key","index","fbid","Container","fluid","Row","item","Col","xs","md","lg","xl","title","ChrisListAddForm","chrisItem","currentUser","uid","InputGroup","Prepend","FormControl","as","aria-label","event","itemObj","timestamp","Date","now","method","headers","body","addItem","ApplicationViews","process","path","exact","Header","size","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.488a5d3d.chunk.js","sourcesContent":["import React, { useState, useEffect, createContext } from \"react\";\nimport { Spinner } from \"react-bootstrap\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\n/*\n    The context is imported and used by individual components\n    that need data\n*/\nexport const FirebaseContext = createContext()\n\n/*\n This component establishes what data can be used.\n */\nexport const FirebaseProvider = (props) => {\n  const userProfile = sessionStorage.getItem(\"userProfile\");\n  const [isLoggedIn, setIsLoggedIn] = useState(userProfile != null);\n\n  const [isFirebaseReady, setIsFirebaseReady] = useState(false);\n\n  const provider = new firebase.auth.GoogleAuthProvider();\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged((u) => {\n      setIsFirebaseReady(true);\n    });\n  }, []);\n\n  //setup other firebase logins\n\n\n  const login = (email, pw) => {\n    return firebase.auth().signInWithEmailAndPassword(email, pw)\n\n      .then((userProfile) => {\n        sessionStorage.setItem(\"userProfile\", JSON.stringify(userProfile.user));\n        setIsLoggedIn(true);\n      });\n  };\n\n  const logout = () => {\n    return firebase.auth().signOut()\n      .then(() => {\n        sessionStorage.clear()\n        setIsLoggedIn(false);\n      });\n  };\n\n  const register = (userProfile, password) => {\n    return firebase.auth().createUserWithEmailAndPassword(userProfile.email, password)\n      .then(savedUserProfile => {\n        console.log('savedU', savedUserProfile)\n        sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n        setIsLoggedIn(true);\n      });\n  };\n\n  \n\n  const signInWithGoogle = () => {\n    return firebase.auth().signInWithPopup(provider)\n      .then(savedUserProfile => {\n        console.log('savedU', savedUserProfile)\n        sessionStorage.setItem(\"userProfile\", JSON.stringify(savedUserProfile.user))\n        setIsLoggedIn(true);\n      })\n  }\n\n\n  \n\n\n  /*\n    You return a context provider\n    allow any child elements to access them.\n*/\n\n  return (\n    <FirebaseContext.Provider value={{ isLoggedIn, login, logout, register, signInWithGoogle }}>\n      {isFirebaseReady\n        ? props.children\n        : <Spinner className=\"app-spinner dark\" />}\n    </FirebaseContext.Provider>\n  );\n}\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport default function Login() {\n  const history = useHistory();\n  const { login } = useContext(FirebaseContext);\n  const { signInWithGoogle } = useContext(FirebaseContext);\n\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n\n  const loginSubmit = (e) => {\n    e.preventDefault();\n    login(email, password)\n      .then(() => history.push(\"/\"))\n      .catch(() => alert(\"Invalid email or password\"));\n  };\n\n  const loginGoogle = () => {\n    signInWithGoogle()\n      .then(response => history.push(\"/\"))\n  }\n\n\n  return (\n\n    <>\n      <h3>Login To View Your List</h3>\n      <div className=\"login-options\">\n        <div className=\"border-option\">\n          <Button onClick={loginGoogle} variant=\"outline-primary\">Login With Google</Button>\n        </div>\n        <Form onSubmit={loginSubmit} className=\"border-option\">\n          <fieldset>\n            <h5>or Login with Email and Password</h5>\n            <Form.Group controlId=\"formBasicEmail\">\n              <Form.Label>Email address</Form.Label>\n              <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={e => setEmail(e.target.value)} />\n            </Form.Group>\n\n            <Form.Group controlId=\"formBasicPassword\">\n              <Form.Label>Password</Form.Label>\n              <Form.Control type=\"password\" placeholder=\"Password\" onChange={e => setPassword(e.target.value)} />\n            </Form.Group>\n\n            <Button variant=\"primary\" type=\"submit\">\n              Submit\n        </Button>\n            <div>\n              <hr />\n              <em>\n                No account? <Link to=\"register\">Sign Up With Email and Password</Link>\n              </em>\n            </div>\n          </fieldset>\n        </Form>\n\n      </div>\n    </>\n  );\n}\n\n","import React, { useState, useContext } from \"react\";\nimport { Button, Form } from 'react-bootstrap';\nimport { useHistory, Link } from \"react-router-dom\";\nimport { FirebaseContext } from \"./FirebaseProvider\";\n\nexport default function Register() {\n  const history = useHistory();\n  const { register } = useContext(FirebaseContext);\n\n  const [name, setName] = useState();\n  const [email, setEmail] = useState();\n  const [password, setPassword] = useState();\n  const [confirmPassword, setConfirmPassword] = useState();\n\n  const registerClick = (e) => {\n    e.preventDefault();\n    if (password && password !== confirmPassword) {\n      alert(\"Passwords don't match. Do better.\");\n    } else {\n      const userProfile = { name, email };\n      register(userProfile, password)\n        .then(() => history.push(\"/\"));\n    }\n  };\n\n  return (\n    <>\n      <h3>Register To Start Your Christmas List</h3>\n      <div className=\"login-options\">\n        <div className=\"border-option\">\n          <Form onSubmit={registerClick}>\n            <fieldset>\n\n              <Form.Group>\n                <Form.Label>Name</Form.Label>\n                <Form.Control id=\"name\" type=\"text\" onChange={e => setName(e.target.value)} />\n              </Form.Group>\n\n              <Form.Group controlId=\"email\">\n                <Form.Label>Email</Form.Label>\n                <Form.Control type=\"text\" onChange={e => setEmail(e.target.value)} />\n                <Form.Text className=\"text-muted\">\n                  We'll never share your email with anyone else.\n          </Form.Text>\n              </Form.Group>\n\n              <Form.Group controlId=\"password\">\n                <Form.Label>Password</Form.Label>\n                <Form.Control type=\"password\" onChange={e => setPassword(e.target.value)} />\n              </Form.Group>\n\n\n              <Form.Group controlId=\"confirmPassword\">\n                <Form.Label>Confirm Password</Form.Label>\n                <Form.Control type=\"password\" onChange={e => setConfirmPassword(e.target.value)} />\n              </Form.Group>\n\n              <Button variant=\"primary\" type=\"submit\">Register</Button>\n            </fieldset>\n          </Form>\n          <div>\n            <hr />\n            <em>\n              Already have an account? <Link to=\"login\">Login</Link>\n            </em>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}","import firebase from \"firebase/app\";\nconst dataURL = \"https://christmasjournal-d3efa.firebaseio.com\";\n\nexport const getAll = () => {\n\t\n\tconsole.log(\"auth\", firebase.auth())\n\treturn fetch(`${dataURL}/christList.json`)\n\t.then(response => response.json())\n}\n\nconst testItem = {\n\t\"title\": \"this is another test function\",\n\t\"fbid\": \"-MNiY3kW3_nn_Jpn8HR8\"\n}\n\nexport const addItem = (itemObj) => {\n\treturn fetch(`${dataURL}/christList.json`,{\n\t\tmethod:\"POST\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(itemObj)\n\t})\n}\n\nexport const updateChristList = (listObj) => {\n\n\t//remove fbid from listObj\n\tconst updatedObj = {\n\t\t\"title\": listObj.title\n\t}\n\treturn fetch(`${dataURL}/christList/${listObj.fbid}.json`,{\n\t\tmethod: \"PUT\",\n\t\theaders: {\n\t\t\t\"Content-Type\": \"application/json\"\n\t\t},\n\t\tbody: JSON.stringify(listObj)\n\t})\n\t\n}\n\n// updateChristList(testItem);","import React, { useEffect, useState } from 'react';\nimport { Col, Container, Row } from 'react-bootstrap';\nimport { getAll } from './../../modules/APICalls';\n\nexport const ChrisList = () => {\n\n\tconst [journalArray, setJournalArray] = useState([])\n\n\n\tuseEffect(() => {\n\t\tgetAll()\n\t\t\t.then(data => {\n\t\t\t\tconsole.log(\"data\", data);\n\t\t\t\tlet newArray = Object.keys(data).map((key, index) => {\n\t\t\t\t\tdata[key].fbid = key;\n                     return data[key];\n                  });\n\t\t\t\tconsole.log(\"newArray\", newArray);\n\t\t\t\tsetJournalArray(newArray)\n\t\t\t})\n\t}, [])\n\n\n\n\treturn (\n\t\t<>\n\t\t\t<h4>Christmas List</h4>\n\t\t\t<Container fluid>\n\t\t\t\t<Row>\n\t\t\t\t{\n\t\t\t\t\tjournalArray.map(item => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Col key={item.fbid} className=\"bgcolor\" xs={12} md={6} lg={4} xl={2}>\n\t\t\t\t\t\t\t\t<h5>{item.title}</h5>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t)\n\t\t\t\t\t})\n\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t</Row>\n\t\t\t</Container>\n\t\t</>\n\t)\n}","import { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport { addItem } from \"./../../modules/APICalls\";\nimport { Form, Button, InputGroup, FormControl } from \"react-bootstrap\";\n\nexport const ChrisListAddForm = () => {\n\n  const [chrisItem, setChrisItem] = useState({});\n  const history = useHistory();\n\n  console.log(\"current user uid\", firebase.auth().currentUser.uid);\n\n  const updateChrisItem = (event) => {\n    const newItem = { ...chrisItem };\n    newItem[event.target.id] = event.target.value;\n    setChrisItem(newItem);\n  }\n\n  const handleAddItem = (event) => {\n    const itemObj = { ...chrisItem };\n    itemObj.uid = firebase.auth().currentUser.uid;\n    itemObj.timestamp = Date.now()\n    addItem(chrisItem)\n      .then(response => history.push(\"/\"))\n  }\n\n\n\n\n\n  return (\n    <>\n      <h4>Add To My Christmas List</h4>\n      <Form>\n        <Form.Group controlId=\"title\">\n          <Form.Label>Title</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Name of item\" />\n        </Form.Group>\n        <Form.Group controlId=\"formGroupPassword\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control type=\"text\" placeholder=\"Password\" />\n        </Form.Group>\n        <InputGroup>\n          <InputGroup.Prepend>\n            <InputGroup.Text>With textarea</InputGroup.Text>\n          </InputGroup.Prepend>\n          <FormControl as=\"textarea\" aria-label=\"With textarea\" />\n        </InputGroup>\n        <Button onClick={handleAddItem}>Add To List</Button>\n      </Form>\n\n    </>\n  )\n}","import React, { useContext } from \"react\";\nimport { Switch, Route, Redirect } from \"react-router-dom\";\nimport { FirebaseContext } from \"./fbAuth/FirebaseProvider\";\nimport Login from \"./fbAuth/Login\";\nimport Register from \"./fbAuth/Register\";\nimport { ChrisList } from \"./journal/ChrisList\";\nimport { ChrisListAddForm } from \"./journal/ChrisListAddForm\";\n\n\nexport default function ApplicationViews() {\n  const { isLoggedIn } = useContext(FirebaseContext);\n\n  return (\n    <main>\n    {console.log(\"process.env.PUBLIC_URL\", process.env)}\n      <Switch>\n        <Route path=\"/\" exact>\n          {isLoggedIn ? <ChrisList /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/add\">\n          {isLoggedIn ? <ChrisListAddForm /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path=\"/login\">\n          <Login />\n        </Route>\n\n        <Route path=\"/register\">\n          <Register />\n        </Route>\n      </Switch>\n    </main>\n  );\n};\n\n/*\n <main>\n    {console.log(\"process.env.PUBLIC_URL\", process.env)}\n      <Switch>\n        \n        <Route path={process.env.PUBLIC_URL + \"/\"} exact>\n          {isLoggedIn ? <ChrisList /> : <Redirect to=\"/login\" />}\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/add\"}>\n          {isLoggedIn ? <ChrisListAddForm /> : <Redirect to={process.env.PUBLIC_URL + \"/login\"} />}\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/login\"}>\n          <Login />\n        </Route>\n\n        <Route path={process.env.PUBLIC_URL + \"/register\"}>\n          <Register />\n        </Route>\n      </Switch>\n    </main>\n    */","import React, { useState, useContext } from 'react';\nimport { Button } from 'react-bootstrap';\nimport { NavLink as RRNavLink } from \"react-router-dom\";\nimport { FirebaseContext } from \"./fbAuth/FirebaseProvider\";\n\nexport const Header = () => {\n  const { isLoggedIn, logout } = useContext(FirebaseContext);\n\n  return (\n    <>\n      <div className=\"header-nav\">\n        {isLoggedIn ? <Button onClick={logout} variant=\"outline-dark\" size=\"sm\">Logout</Button>\n          : null}\n\n      </div>\n\n    </>\n  )\n}","import React from 'react';\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport ApplicationViews from \"./components/ApplicationViews\";\nimport { Header } from \"./components/Header\";\nimport { FirebaseProvider } from \"./components/fbAuth/FirebaseProvider\";\n\n\nfunction App() {\n\n  //<Route path={process.env.PUBLIC_URL + ‘/’}>\n\n  return (\n    <div className=\"App\">\n      <h1>All I want for Christmas...</h1>\n      <Router>\n        <FirebaseProvider>\n          <Header />\n          <ApplicationViews />\n        </FirebaseProvider>\n      </Router>\n\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport './custom.scss';\nimport { firebaseConfig } from \"./components/fbAuth/firebaseConfig\";\nimport firebase from \"firebase/app\";\n\nfirebase.initializeApp(firebaseConfig);\nconst auth = firebase.auth();\n\nconsole.log(\"auth\", auth);\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n","export const firebaseConfig = {\n    apiKey: \"AIzaSyCBRUk2LvEfwdOwCbj2E7WwrDNBARaIGKY\",\n    authDomain: \"christmasjournal-d3efa.firebaseapp.com\",\n    databaseURL: \"https://christmasjournal-d3efa.firebaseio.com\",\n    projectId: \"christmasjournal-d3efa\",\n    storageBucket: \"christmasjournal-d3efa.appspot.com\",\n    messagingSenderId: \"355617880647\",\n    appId: \"1:355617880647:web:5c1babbb8fd8f74f0fcf62\"\n  }"],"sourceRoot":""}